# -*- coding: utf-8 -*-
"""Airflow koreabank_gdpyearly.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PUl_HKcJ2bs1wWY2OJhJQMJQGm1XrDve
"""

import json
import pendulum
import requests
import traceback
from datetime import date, datetime

from airflow import DAG
from airflow.decorators import task
from airflow.exceptions import AirflowFailException


from config.dp import config as conf_dp
from util.proc_log import ProcLogger


local_tz = pendulum.timezone('Asia/Seoul')
now = datetime.now(tz=local_tz)
start_date = datetime(2023, 2, 20, tzinfo=local_tz)

proc_logger = ProcLogger(conf_dp)

default_args = {
    'owner' : '*****',
}


@task(task_id = 'koreabank_gdp_year')

def koreabank_gdp_year():
    try:
        url = '******'
        res = requests.post(url, timeout=300)

        return res.text

    except Exception:
        err_msg = traceback.format_exc()


        raise AirflowFailException(err_msg)


with DAG(
    dag_id = 'scrap_koreabank_gdp_yearly',
    start_date =start_date,
    schedule_interval = '@yearly', #매년 1/1 자정에 1회 실행  # @yearly 랑 똑같다.
    catchup= False,
    default_args = default_args,
    tags = ['test'],    
)as dag:

        koreabank_gdp_year()